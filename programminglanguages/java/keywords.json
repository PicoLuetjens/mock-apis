[
        {
            "keyword": "abstract",
            "definition": "Used to declare an abstract class or method. Abstract classes cannot be instantiated, and abstract methods must be implemented by subclasses.",
            "type": "Modifier"
        },
        {
            "keyword": "assert",
            "definition": "Used for debugging purposes to make an assertion. An assertion is a boolean expression that you can use to test assumptions in your code.",
            "type": "Statement"
        },
        {
            "keyword": "boolean",
            "definition": "Used to declare a variable of type boolean, which can hold the values `true` or `false`.",
            "type": "Data Type"
        },
        {
            "keyword": "break",
            "definition": "Exits from the current loop or switch statement.",
            "type": "Control Flow"
        },
        {
            "keyword": "byte",
            "definition": "Used to declare a variable of type byte, which is an 8-bit integer.",
            "type": "Data Type"
        },
        {
            "keyword": "case",
            "definition": "Defines a branch in a switch statement. Each case corresponds to a constant value.",
            "type": "Control Flow"
        },
        {
            "keyword": "catch",
            "definition": "Used to handle exceptions thrown by a try block. It defines a block of code that is executed if an exception occurs.",
            "type": "Exception Handling"
        },
        {
            "keyword": "char",
            "definition": "Used to declare a variable of type char, which holds a single 16-bit Unicode character.",
            "type": "Data Type"
        },
        {
            "keyword": "class",
            "definition": "Used to declare a class, which is a blueprint for creating objects.",
            "type": "Class Definition"
        },
        {
            "keyword": "const",
            "definition": "Reserved for future use but not currently used in Java. It is not a keyword in practice.",
            "type": "Reserved"
        },
        {
            "keyword": "continue",
            "definition": "Skips the current iteration of a loop and proceeds with the next iteration.",
            "type": "Control Flow"
        },
        {
            "keyword": "default",
            "definition": "Specifies the default block of code in a switch statement if none of the case values match.",
            "type": "Control Flow"
        },
        {
            "keyword": "do",
            "definition": "Used to start a do-while loop, which executes the block of code once before checking the condition.",
            "type": "Control Flow"
        },
        {
            "keyword": "double",
            "definition": "Used to declare a variable of type double, which is a 64-bit floating-point number.",
            "type": "Data Type"
        },
        {
            "keyword": "else",
            "definition": "Defines a block of code that is executed if the condition in an if statement is false.",
            "type": "Control Flow"
        },
        {
            "keyword": "enum",
            "definition": "Defines a set of named constants. Enums are used to declare a collection of constants.",
            "type": "Data Type"
        },
        {
            "keyword": "extends",
            "definition": "Indicates that a class is inheriting from a superclass or that an interface is inheriting from another interface.",
            "type": "Inheritance"
        },
        {
            "keyword": "final",
            "definition": "Used to declare constants, prevent method overriding, or inheritance of a class.",
            "type": "Modifier"
        },
        {
            "keyword": "finally",
            "definition": "Defines a block of code that is executed after a try block, regardless of whether an exception was thrown or not.",
            "type": "Exception Handling"
        },
        {
            "keyword": "float",
            "definition": "Used to declare a variable of type float, which is a 32-bit floating-point number.",
            "type": "Data Type"
        },
        {
            "keyword": "for",
            "definition": "Used to start a for loop, which iterates over a range of values or an array.",
            "type": "Control Flow"
        },
        {
            "keyword": "goto",
            "definition": "Reserved for future use but not currently used in Java. It is not a keyword in practice.",
            "type": "Reserved"
        },
        {
            "keyword": "if",
            "definition": "Used to make decisions in code. Executes a block of code if its condition is true.",
            "type": "Control Flow"
        },
        {
            "keyword": "implements",
            "definition": "Indicates that a class implements an interface. It is used to provide the methods defined by the interface.",
            "type": "Interface Implementation"
        },
        {
            "keyword": "import",
            "definition": "Used to include classes and interfaces from other packages.",
            "type": "Import"
        },
        {
            "keyword": "instanceof",
            "definition": "Tests whether an object is an instance of a specific class or implements an interface.",
            "type": "Type Checking"
        },
        {
            "keyword": "int",
            "definition": "Used to declare a variable of type int, which is a 32-bit integer.",
            "type": "Data Type"
        },
        {
            "keyword": "interface",
            "definition": "Used to define a contract that classes must follow. Interfaces can contain method signatures but no implementation.",
            "type": "Interface Definition"
        },
        {
            "keyword": "long",
            "definition": "Used to declare a variable of type long, which is a 64-bit integer.",
            "type": "Data Type"
        },
        {
            "keyword": "native",
            "definition": "Indicates that a method is implemented in native code using JNI (Java Native Interface).",
            "type": "Modifier"
        },
        {
            "keyword": "new",
            "definition": "Creates a new object or instance of a class.",
            "type": "Object Creation"
        },
        {
            "keyword": "null",
            "definition": "Represents a null reference, indicating that a variable does not refer to any object.",
            "type": "Literal"
        },
        {
            "keyword": "package",
            "definition": "Defines a namespace for organizing classes and interfaces.",
            "type": "Namespace"
        },
        {
            "keyword": "private",
            "definition": "Specifies that a member of a class is accessible only within the class itself.",
            "type": "Access Modifier"
        },
        {
            "keyword": "protected",
            "definition": "Specifies that a member of a class is accessible within the same package and by subclasses.",
            "type": "Access Modifier"
        },
        {
            "keyword": "public",
            "definition": "Specifies that a member of a class is accessible from any other class.",
            "type": "Access Modifier"
        },
        {
            "keyword": "return",
            "definition": "Exits a method and optionally returns a value.",
            "type": "Method Control"
        },
        {
            "keyword": "short",
            "definition": "Used to declare a variable of type short, which is a 16-bit integer.",
            "type": "Data Type"
        },
        {
            "keyword": "static",
            "definition": "Indicates that a member belongs to the class itself rather than to instances of the class.",
            "type": "Modifier"
        },
        {
            "keyword": "strictfp",
            "definition": "Used to restrict floating-point calculations to ensure portability and precision.",
            "type": "Modifier"
        },
        {
            "keyword": "super",
            "definition": "Refers to the superclass of the current object. Used to access superclass methods and constructors.",
            "type": "Inheritance"
        },
        {
            "keyword": "switch",
            "definition": "Allows the execution of different parts of code based on the value of an expression.",
            "type": "Control Flow"
        },
        {
            "keyword": "synchronized",
            "definition": "Used to ensure that a method or block of code is accessed by only one thread at a time.",
            "type": "Concurrency"
        },
        {
            "keyword": "this",
            "definition": "Refers to the current object instance.",
            "type": "Reference"
        },
        {
            "keyword": "throw",
            "definition": "Used to explicitly throw an exception.",
            "type": "Exception Handling"
        },
        {
            "keyword": "throws",
            "definition": "Used in method signatures to declare that a method can throw one or more exceptions.",
            "type": "Exception Declaration"
        },
        {
            "keyword": "transient",
            "definition": "Indicates that a field should not be serialized when an object is converted into a byte stream.",
            "type": "Serialization"
        },
        {
            "keyword": "try",
            "definition": "Used to start a block of code that will be tested for exceptions.",
            "type": "Exception Handling"
        },
        {
            "keyword": "void",
            "definition": "Specifies that a method does not return a value.",
            "type": "Method Declaration"
        },
        {
            "keyword": "volatile",
            "definition": "Indicates that a variable's value will be modified by different threads.",
            "type": "Concurrency"
        },
        {
            "keyword": "while",
            "definition": "Creates a while loop that continues executing as long as its condition is true.",
            "type": "Control Flow"
        }
]
